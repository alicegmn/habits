name: Simple Server Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build and test image
        run: docker build --target build -t simple-server-test -f simple-server/Dockerfile simple-server

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Check out repository
      - name: Check out code
        uses: actions/checkout@v3

      # Set up Node.js (for docs generation)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Install dependencies
      - name: Install dependencies
        working-directory: simple-server
        run: npm ci

      # Generate OpenAPI + Swagger UI docs
      - name: Generate API Documentation
        working-directory: simple-server
        run: |
          echo "üìò Generating Swagger documentation..."
          npm run docs
          ls -l docs/

      # Publish docs to GitHub Pages
      - name: Publish API Docs to GitHub Pages
        id: publish_docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: simple-server/docs
          user_name: github-actions
          user_email: github-actions@github.com
          commit_message: "ü§ñ Auto-update API docs from v36 branch"

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker images (latest + v36-<sha> + branch)
      - name: Build and push Docker images
        run: |
          IMAGE="${{ secrets.DOCKER_USERNAME }}/simple-server"
          SHORT_SHA=${GITHUB_SHA::7}
          BRANCH=${GITHUB_REF_NAME}

          echo "üèóÔ∏è  Building and tagging as:"
          echo " - $IMAGE:latest"
          echo " - $IMAGE:${BRANCH}-$SHORT_SHA"
          echo " - $IMAGE:${BRANCH}"

          docker build --target production \
            -t "$IMAGE:latest" \
            -t "$IMAGE:${BRANCH}-$SHORT_SHA" \
            -t "$IMAGE:${BRANCH}" \
            -f simple-server/Dockerfile simple-server

          docker push "$IMAGE:latest"
          docker push "$IMAGE:${BRANCH}-$SHORT_SHA"
          docker push "$IMAGE:${BRANCH}"
